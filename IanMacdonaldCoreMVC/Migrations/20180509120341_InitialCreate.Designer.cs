// <auto-generated />
using IanMacdonaldCoreMVC.Data;
using IanMacdonaldCoreMVC.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace IanMacdonaldCoreMVC.Migrations
{
    [DbContext(typeof(IanMacdonaldDbContext))]
    [Migration("20180509120341_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IanMacdonaldCoreMVC.Models.Album", b =>
                {
                    b.Property<int>("AlbumId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("AlbumReleased");

                    b.Property<string>("AlbumTitle")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int>("ArtistId");

                    b.HasKey("AlbumId");

                    b.HasIndex("ArtistId");

                    b.ToTable("Albums");
                });

            modelBuilder.Entity("IanMacdonaldCoreMVC.Models.Artist", b =>
                {
                    b.Property<int>("ArtistId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ArtistName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int>("Genre");

                    b.HasKey("ArtistId");

                    b.ToTable("Artists");
                });

            modelBuilder.Entity("IanMacdonaldCoreMVC.Models.Song", b =>
                {
                    b.Property<int>("SongId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AlbumId");

                    b.Property<string>("SongName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int>("TrackPosition");

                    b.HasKey("SongId");

                    b.HasIndex("AlbumId");

                    b.ToTable("Songs");
                });

            modelBuilder.Entity("IanMacdonaldCoreMVC.Models.Album", b =>
                {
                    b.HasOne("IanMacdonaldCoreMVC.Models.Artist", "Artist")
                        .WithMany("Albums")
                        .HasForeignKey("ArtistId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IanMacdonaldCoreMVC.Models.Song", b =>
                {
                    b.HasOne("IanMacdonaldCoreMVC.Models.Album", "Album")
                        .WithMany("Songs")
                        .HasForeignKey("AlbumId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
